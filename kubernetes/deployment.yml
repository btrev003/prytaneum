apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prytaneum-dev
  name: prytaneum-dev
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prytaneum-dev
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prytaneum-dev
    spec:
      # serviceAccountName: prytaneum-kubernetes
      containers:
        - name: prytaneum-dev-sha256-1
          image: gcr.io/prytaneum-project/github.com/kadey001/prytaneum
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  key: NODE_ENV
                  name: prytaneum-dev-config-m55x
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  key: HOST
                  name: prytaneum-dev-config-m55x
            - name: CLIENT_PORT
              valueFrom:
                configMapKeyRef:
                  key: CLIENT_PORT
                  name: prytaneum-dev-config-m55x
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  key: SERVER_PORT
                  name: prytaneum-dev-config-m55x
            - name: NEXT_PUBLIC_GRAPHQL_URL
              valueFrom:
                configMapKeyRef:
                  key: NEXT_PUBLIC_GRAPHQL_URL
                  name: prytaneum-dev-config-m55x
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: prytaneum-dev-config-m55x
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DB_PASSWORD
                  name: prytaneum-dev-config-m55x
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: prytaneum-dev-config-m55x
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: prytaneum-dev-config-m55x
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: prytaneum-dev
  name: prytaneum-dev-hpa-p6zm
  namespace: dev
spec:
  maxReplicas: 1
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: prytaneum-dev
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    # cloud.google.com/backend-config: '{"default": "prytaneum-backend-config"}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: prytaneum-dev
  name: prytaneum-dev-service
  namespace: dev
spec:
  clusterIP: 10.112.13.141
  clusterIPs:
    - 10.112.13.141
  externalTrafficPolicy: Local
  ports:
    - nodePort: 30492
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: prytaneum-dev
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prytaneum-kubernetes
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prytaneum-ingress
  annotations:
    # If the class annotation is not specified it defaults to "gce".
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/v1beta1.FrontendConfig: "prytaneum-frontend-config"
    kubernetes.io/ingress.allow-http: "true"
    # ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.regional-static-ip-name: prytaneum-io-ip
    networking.gke.io/managed-certificates: prytaneum-io-cert
spec:
  rules:
  - host: prytaneum.io
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: prytaneum-dev-service
            port:
              number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: prytaneum-io-cert
spec:
  domains:
    - prytaneum.io
    - www.prytaneum.io
---
apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: prytaneum-backend-config
spec:
  sessionAffinity:
    affinityType: "CLIENT_IP"
  timeoutSec: 300
  connectionDraining:
    drainingTimeoutSec: 600
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: prytaneum-frontend-config
spec:
  redirectToHttps:
    enabled: true
